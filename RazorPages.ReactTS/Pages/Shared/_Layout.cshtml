<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - RazorPages.ReactTS</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <!-- 环境感知加载 React 和 axios -->
    <environment include="Development">
        <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
        <script src="https://unpkg.com/axios@1.2.0/dist/axios.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
        <script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
        <script src="https://unpkg.com/axios@1.2.0/dist/axios.min.js"></script>
    </environment>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/RazorPages.ReactTS.styles.css" asp-append-version="true"/>
</head>
<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-page="/Index">RazorPages.ReactTS</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-page="/TestPage">Test Page</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>
<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2025 - RazorPages.ReactTS - <a asp-area="" asp-page="/Privacy">Privacy</a>
    </div>
</footer>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // 全局初始化
    document.addEventListener('DOMContentLoaded', function () {
            // 将库挂载到window
            window.React = React;
        window.ReactDOM = ReactDOM;
        window.axios = axios;

        // 组件加载函数
        function loadComponent(container) {
            const scriptPath = container.dataset.reactComponent;
            if (!scriptPath) return;

            // 创建加载序列（先工具后组件）
            const loadQueue = [];

            // --如果是 httpClient 相关组件，先加载工具类--
            // if (scriptPath.includes('User'))
            //     loadQueue.push('~/js/utils/httpClient.js');
            // 始终优先加载工具类
            loadQueue.push('/js/utils/httpClient.js');
            loadQueue.push('/js/utils/Test.js');

            loadQueue.push(scriptPath);

            // 递归加载脚本
            const loadNext = (index) => {
                if (index >= loadQueue.length) return;

                const url = loadQueue[index];
                import(url)
                    .then(module => {
                        // 如果是最后一个脚本，初始化组件
                        if (index == loadQueue.length - 1) {
                            if (module.PageContent) {
                                module.PageContent(container);
                            }
                        }

                        loadNext(index + 1);
                    })
                    .catch(error => {
                        console.error(`加载失败：${url}`, error);
                    });
            };

            // 开始加载序列
            loadNext(0);
        }

        // 查找并加载所有组件
        document.querySelectorAll('[data-react-component]').forEach(loadComponent);
    });
</script>
<script src="~/js/site.js" asp-append-version="true"></script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>